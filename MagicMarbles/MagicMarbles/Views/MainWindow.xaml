<Window x:Class="MagicMarbles.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MagicMarbles"
        xmlns:views="clr-namespace:MagicMarbles.Views"
        xmlns:viewModels="clr-namespace:MagicMarbles.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:extensions="clr-namespace:MagicMarbles.Extensions"
        xmlns:helpers="clr-namespace:MagicMarbles.Helpers"
        mc:Ignorable="d"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        ResizeMode="NoResize"
        Title="Magic Marbles" Height="576" Width="915">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <command:EventToCommand Command="{Binding WindowClosing}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <DataTemplate DataType="{x:Type viewModels:GameViewModel}">
            <views:GamePageView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:InfoViewModel}">
            <views:InfoPageView />
        </DataTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="SideBarButtons" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF212736"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF212736"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StartButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#21B730"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#23C033"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid Background="#000000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="123.2"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Height="45" Orientation="Horizontal" VerticalAlignment="Bottom" Background="#992D364C" HorizontalAlignment="Right" Margin="0,0,-0.2,0" Width="790" Grid.ColumnSpan="2">
                <TextBlock TextWrapping="Wrap" Text="Rows" Foreground="White" Margin="25,9,25,0" FontSize="20" TextDecorations="{x:Null}" HorizontalAlignment="Right"/>
                <TextBox Width="100" Height="30" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" FontSize="20">
                    <TextBox.Text>
                        <Binding Path="CustomGrid.Rows" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <helpers:TextBoxRangeRule Min="2" Max="16"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock TextWrapping="Wrap" Foreground="White" Text="Columns" Margin="25,9,25,0" FontSize="20" TextDecorations="{x:Null}" HorizontalAlignment="Right"></TextBlock>
                <TextBox Width="100" Height="30" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">
                    <TextBox.Text>
                        <Binding Path="CustomGrid.Columns" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <helpers:TextBoxRangeRule Min="2" Max="16"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock TextWrapping="Wrap" Text="{Binding WinLose, Mode=TwoWay}"  Foreground="White" Margin="110,9,0,0" FontSize="20" TextDecorations="{x:Null}" HorizontalAlignment="Right"/>
                <TextBlock TextWrapping="Wrap" Text="{Binding Highscore, Mode=TwoWay}"  Foreground="White" Margin="90,9,0,0" FontSize="20" TextDecorations="{x:Null}" HorizontalAlignment="Right"/>
            </StackPanel>
            <DockPanel LastChildFill="False" Background="#992D364C" Margin="0,0,4.2,0.2">
                <Button BorderThickness="0" DockPanel.Dock="Top" VerticalAlignment="Top" Margin="0,0,0,10" Height="120" Command="{Binding ChangeToGamePageCommand}" Background="#FF1B202E" Style="{DynamicResource SideBarButtons}">
                    <StackPanel Orientation="Vertical" Margin="0">
                        <Image Source="../Assets/play.png" Width="50" Margin="0,10,0,0" OpacityMask="White" />
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" FontSize="20" Foreground="White">Game</TextBlock>
                    </StackPanel>
                </Button>
                <!--                <Button BorderThickness="0" DockPanel.Dock="Top" Margin="0,0,0,10" Height="120" Background="#FF1B202E" Style="{DynamicResource SideBarButtons}">-->
                <!--                    <StackPanel Orientation="Vertical" Margin="0">-->
                <!--                        <Image Source="../Assets/highscore.png" Width="40" Margin="0,0,0,0" />-->
                <!--                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Margin="0" FontSize="20">Highscore</TextBlock>-->
                <!--                    </StackPanel>-->
                <!--                </Button>-->
                <Button BorderThickness="0" DockPanel.Dock="Top" Margin="0" Height="100" Background="#FF1B202E" Command="{Binding ChangeToInfoPageCommand}" Style="{DynamicResource SideBarButtons}">
                    <StackPanel Orientation="Vertical">
                        <Image Source="../Assets/info.png" Width="35" Margin="0,0,0,10" />
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Margin="0" FontSize="25">Info</TextBlock>
                    </StackPanel>
                </Button>
                <Button BorderThickness="0" DockPanel.Dock="Bottom"  Margin="0" Height="45" Background="#FF09873E"  Command="{Binding StartGameCommand}" Style="{DynamicResource StartButton}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Margin="0" FontSize="25">Start</TextBlock>
                    </StackPanel>
                </Button>
            </DockPanel>
            <ContentControl Content="{Binding Path=CurrentViewModel, Mode=TwoWay}" Margin="119,0,0,45" Grid.ColumnSpan="2"/>
        </Grid>
    </Grid>
</Window>

